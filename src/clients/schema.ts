/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/sample/{n}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Sample */
        get: operations["sample_sample__n__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/predict": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Predict */
        post: operations["predict_predict_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/predict/from-ids": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Predict From Id */
        post: operations["predict_from_id_predict_from_ids_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** CveModel */
        CveModel: {
            /**
             * Attackvector
             * @enum {string}
             */
            attackVector: "NETWORK" | "ADJACENT_NETWORK" | "LOCAL" | "PHYSICAL";
            /**
             * Attackcomplexity
             * @enum {string}
             */
            attackComplexity: "LOW" | "HIGH";
            /**
             * Privilegesrequired
             * @enum {string}
             */
            privilegesRequired: "NONE" | "LOW" | "HIGH";
            /**
             * Userinteraction
             * @enum {string}
             */
            userInteraction: "NONE" | "REQUIRED";
            /**
             * Scope
             * @enum {string}
             */
            scope: "UNCHANGED" | "CHANGED";
            /**
             * Confidentialityimpact
             * @enum {string}
             */
            confidentialityImpact: "NONE" | "LOW" | "HIGH";
            /**
             * Integrityimpact
             * @enum {string}
             */
            integrityImpact: "NONE" | "LOW" | "HIGH";
            /**
             * Availabilityimpact
             * @enum {string}
             */
            availabilityImpact: "NONE" | "LOW" | "HIGH";
        };
        /** CveModels */
        CveModels: {
            /** Data */
            data: components["schemas"]["CveModel"][];
        };
        /** CveNvdIdsModel */
        CveNvdIdsModel: {
            /** Ids */
            ids: string[];
        };
        /** CvePrediction */
        CvePrediction: {
            inputModel: components["schemas"]["CveModel"];
            /**
             * Label
             * @enum {integer}
             */
            label: 0 | 1;
            /** Score */
            score: number;
        };
        /** CvePredictions */
        CvePredictions: {
            /** Data */
            data: components["schemas"]["CvePrediction"][];
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    sample_sample__n__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                n: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CveModels"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    predict_predict_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CveModels"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CvePredictions"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    predict_from_id_predict_from_ids_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CveNvdIdsModel"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CvePredictions"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
